package ccss;

//import java.io.*;
import java_cup.runtime.*;
import java.util.ArrayList;
init with {:

:};
parser code
{:
// METODOS Y VARIABLES GLOBALES DEL PARSER, PUEDEN SER PUBLICAS O PRIVADAS

public void syntax_error(Symbol s){
/**Metodo al que se llama automaticamente ante algun error sintactico.*/
        System.out.println("Error Sintactico en la Linea " + (s.right+1) +" Columna "+s.left+ ". Identificador " +s.value + " no reconocido." );
int linea = s.right+1; int columna = s.left; 
String texto = "Identificador " +s.value + " no reconocido.";

}            
public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{
/**Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores.*/
        System.out.println("Error Sintactico no recuperable en la Linea " + (s.right+1)+ " Columna "+s.left+". Identificador " + s.value + " no reconocido.");
}
:}

action code
{:
:}

terminal String texto,alineado,izquierda,derecha,centrado,justificado,formato,negrilla,cursiva,mayuscula,
minuscula,capital,letra,tamtex,fondo,auto,visible,horizontal,vertical,borde,opaque,colortext,grupo,idd,coma,
mas,menos,igual,id,corcheteA,corcheteC,por,dosPuntos,verdadero,falso,llaveA,llaveC,
puntoComa,ERROR,numero,dividido,cadena,punto,caracter,parentesisA,parentesisC,entero,decimal;

non terminal Caracter INICIO,INSTRUCCION,BLOQUE,OPCION,ESTILOS,ESTILO,ALINEADO,FORMATOS,FORMATO,VALOR,AREA,
TIPO,OP,E;

precedence left mas, menos;
precedence left por, dividido;

start with INICIO;

INICIO::=INSTRUCCION:i{:
    ccss.NODO = i.nodo;
:};

INSTRUCCION ::= INSTRUCCION:i BLOQUE:n {:
    RESULT = new Caracter();
    NodoCCSS INSTRUCCION = new NodoCCSS("INSTRUCCION");
    INSTRUCCION.insertar(i.nodo); INSTRUCCION.insertar(n.nodo);
    RESULT.nodo = INSTRUCCION;
:}
|BLOQUE:n{:
    NodoCCSS INSTRUCCION = new NodoCCSS("INSTRUCCION");
    RESULT = new Caracter();
    INSTRUCCION.insertar(n.nodo); 
    RESULT.nodo = INSTRUCCION;
:};


BLOQUE::=id:i corcheteA OPCION:n corcheteC{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("BLOQUE");
    E.insertar(new NodoCCSS(i,iright,ileft)); E.insertar(new NodoCCSS("[")); E.insertar(n.nodo); E.insertar(new NodoCCSS("]"));
    RESULT.nodo = E;
:};


OPCION ::= OPCION:i TIPO:n {:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("OPCION");
    E.insertar(i.nodo); E.insertar(n.nodo);
    RESULT.nodo = E;
:}
|TIPO:n{:
    NodoCCSS E = new NodoCCSS("OPCION");
    RESULT = new Caracter();
    E.insertar(n.nodo); 
    RESULT.nodo = E;
:};


TIPO::=grupo parentesisA id:i parentesisC puntoComa ESTILOS:e{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("TIPO");
    E.insertar(new NodoCCSS("grupo")); E.insertar(new NodoCCSS("(")); E.insertar(new NodoCCSS(i,iright,ileft)); E.insertar(new NodoCCSS(")")); 
    E.insertar(e.nodo);
    RESULT.nodo = E;
:}
|idd parentesisA id:i parentesisC puntoComa ESTILOS:e{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("TIPO");
    E.insertar(new NodoCCSS("id")); E.insertar(new NodoCCSS("(")); E.insertar(new NodoCCSS(i,iright,ileft)); E.insertar(new NodoCCSS(")")); 
    E.insertar(e.nodo);
    RESULT.nodo = E;
:}
|grupo parentesisA id:i parentesisC puntoComa{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("TIPO");
    E.insertar(new NodoCCSS("grupo")); E.insertar(new NodoCCSS("(")); E.insertar(new NodoCCSS(i,iright,ileft)); E.insertar(new NodoCCSS(")")); 
    RESULT.nodo = E;
:}
|idd parentesisA id:i parentesisC puntoComa{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("TIPO");
    E.insertar(new NodoCCSS("id")); E.insertar(new NodoCCSS("(")); E.insertar(new NodoCCSS(i,iright,ileft)); E.insertar(new NodoCCSS(")")); 
    RESULT.nodo = E;
:};


ESTILOS ::= ESTILOS:i ESTILO:n {:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILOS");
    E.insertar(i.nodo); E.insertar(n.nodo);
    RESULT.nodo = E;
:}
|ESTILO:n{:
    NodoCCSS E = new NodoCCSS("ESTILOS");
    RESULT = new Caracter();
    E.insertar(n.nodo); 
    RESULT.nodo = E;
:};


ESTILO::=alineado:i igual ALINEADO:v puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("alineado",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(v.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|texto:i igual OP:n puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("texto",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(n.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|formato:i igual FORMATOS:v puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("formato",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(v.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|letra:i igual OP:n puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("letra",iright,ileft));E.insertar(new NodoCCSS("="));E.insertar(n.nodo);E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|tamtex:i igual OP:n puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("tamtex",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(n.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|fondo:i igual OP:n puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("fondo",iright,ileft));E.insertar(new NodoCCSS("="));E.insertar(n.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|auto:i igual corcheteA VALOR:v coma AREA:a corcheteC puntoComa{: //8
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("auto",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(new NodoCCSS("[")); E.insertar(v.nodo);E.insertar(new NodoCCSS(","));
    E.insertar(a.nodo);  E.insertar(new NodoCCSS("]")); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|visible:i igual VALOR:v puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("visible",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(v.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|borde:i igual corcheteA numero:n coma cadena:c coma VALOR:v corcheteC puntoComa{: //10
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("borde",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(new NodoCCSS("[")); E.insertar(new NodoCCSS(n,nright,nleft));E.insertar(new NodoCCSS(","));
    E.insertar(new NodoCCSS(c));  E.insertar(new NodoCCSS(","));  E.insertar(v.nodo);  E.insertar(new NodoCCSS("]")); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|opaque:i igual VALOR:v puntoComa{: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("opaque",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(v.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:}
|colortext:i igual OP:n puntoComa {: //4
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("ESTILO");
    E.insertar(new NodoCCSS("colortext",iright,ileft));E.insertar(new NodoCCSS("=")); E.insertar(n.nodo); E.insertar(new NodoCCSS(";"));
    RESULT.nodo = E;
:};


ALINEADO::=izquierda{:
    NodoCCSS E = new NodoCCSS("ALINEADO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("izquierda"));
    RESULT.nodo = E;
:}
|derecha{:
    NodoCCSS E = new NodoCCSS("ALINEADO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("derecha"));
    RESULT.nodo = E;
:}
|centrado{:
    NodoCCSS E = new NodoCCSS("ALINEADO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("centrado"));
    RESULT.nodo = E;
:}
|justificado{:
    NodoCCSS E = new NodoCCSS("ALINEADO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("justificado"));
    RESULT.nodo = E;
:};


FORMATOS ::= FORMATOS:i coma FORMATO:n {:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("FORMATOS");
    E.insertar(i.nodo);E.insertar(new NodoCCSS(",")); E.insertar(n.nodo);
    RESULT.nodo = E;
:}
|FORMATO:n{:
    NodoCCSS E = new NodoCCSS("FORMATOS");
    RESULT = new Caracter();
    E.insertar(n.nodo); 
    RESULT.nodo = E;
:};


FORMATO::=negrilla{:
    NodoCCSS E = new NodoCCSS("FORMATO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("negrilla"));
    RESULT.nodo = E;
:}
|cursiva{:
    NodoCCSS E = new NodoCCSS("FORMATO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("cursiva"));
    RESULT.nodo = E;
:}
|mayuscula{:
    NodoCCSS E = new NodoCCSS("FORMATO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("mayuscula"));
    RESULT.nodo = E;
:}
|minuscula{:
    NodoCCSS E = new NodoCCSS("FORMATO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("minuscula"));
    RESULT.nodo = E;
:}
|capital{:
    NodoCCSS E = new NodoCCSS("FORMATO");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("capital"));
    RESULT.nodo = E;
:};


VALOR::=falso{:
    NodoCCSS E = new NodoCCSS("VALOR");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("falso"));
    RESULT.nodo = E;
:}
|verdadero{:
    NodoCCSS E = new NodoCCSS("VALOR");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("verdadero"));
    RESULT.nodo = E;
:};


AREA::=horizontal{:
    NodoCCSS E = new NodoCCSS("AREA");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("horizontal"));
    RESULT.nodo = E;
:}
|vertical{:
    NodoCCSS E = new NodoCCSS("AREA");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("vertical"));
    RESULT.nodo = E;
:};


OP::=E:e{:
    NodoCCSS OP = new NodoCCSS("OP");
    RESULT = new Caracter();
    OP.insertar(e.nodo);
    RESULT.nodo = OP;
:};


E::=parentesisA E:a parentesisC{:
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("(")); E.insertar(a.nodo); E.insertar(new NodoCCSS(")"));
    RESULT.nodo = E;
:}
|E:a mas:i E:b{: 
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(a.nodo); E.insertar(new NodoCCSS("+",iright,ileft)); E.insertar(b.nodo);
    RESULT.nodo = E;
:}
|E:a menos:i E:b{:
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(a.nodo); E.insertar(new NodoCCSS("-",iright,ileft)); E.insertar(b.nodo);
    RESULT.nodo = E;
 :}
|E:a por:i E:b{: 
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(a.nodo); E.insertar(new NodoCCSS("*",iright,ileft)); E.insertar(b.nodo);
    RESULT.nodo = E;
:}
|E:a dividido:i E:b{: 
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(a.nodo); E.insertar(new NodoCCSS("/",iright,ileft)); E.insertar(b.nodo);
    RESULT.nodo = E;
:}
|verdadero:i{:
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("verdadero","bool",iright,ileft));
    RESULT.nodo = E;
 :}
|falso:i{:
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("falso","bool",iright,ileft));
    RESULT.nodo = E;
 :}
|menos:i E:b{:
    NodoCCSS E = new NodoCCSS("E");
    RESULT = new Caracter();
    E.insertar(new NodoCCSS("-",iright,ileft)); E.insertar(b.nodo);
    RESULT.nodo = E;
:}
|cadena:n{:
    RESULT = new Caracter();
    n = n.replace("\"","");
    NodoCCSS E = new NodoCCSS("E");
    E.insertar(new NodoCCSS(n,"cadena",nright,nleft));
    RESULT.nodo = E;
:}
|entero:n{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("E");
    E.insertar(new NodoCCSS(n,"entero",nright,nleft));
    RESULT.nodo = E;
:}
|decimal:n{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("E");
    E.insertar(new NodoCCSS(n,"decimal",nright,nleft));
    RESULT.nodo = E;
:}
|id:i{:
    RESULT = new Caracter();
    NodoCCSS E = new NodoCCSS("E");
    E.insertar(new NodoCCSS(i,"id",iright,ileft));
    RESULT.nodo = E;
:};


